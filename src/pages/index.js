import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "@/styles/Home.module.css";
import React, { useCallback, useEffect, useMemo, useState } from "react";
import { unified } from "unified";
import { Remark } from "react-remark";
import rehypeReact from "rehype-react";
import Link from "@/components/Link";
import rehypeRaw from "rehype-raw";
import ReactHTMLParser from "react-html-parser";
import ReactMarkdown from "react-markdown";

import rehypeParse from "rehype-parse";
import rehypeFormat from "rehype-format";
import rehypeStringify from "rehype-stringify/lib";
import remarkRehype from "remark-rehype";
import remarkParse from "remark-parse/lib";
import { Text } from "@mantine/core";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [md, setMd] = useState(null);
  const getData = () => {
    fetch(
      "https://raw.githubusercontent.com/aokocax/deprem-yardim-projeleri/main/README.md"
    )
      .then((res) => res.text())
      .then((res) => {
        setMd(res);
      });
  };
  useEffect(() => {
    getData();
  }, []);

  const convert = useMemo(() => {
    return unified()
      .use(remarkParse)
      .use(remarkRehype, { allowDangerousHtml: true })
      .use(rehypeRaw)
      .use(rehypeStringify)

      .processSync(md);
  }, [md]);

  useEffect(() => {
    console.log(convert);
  }, [convert]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        {ReactHTMLParser(convert, {
          transform: (node) => {
            if (node.type === "tag" && node.name === "strong") {
              return (
                <a
                  rel="noreferrer noopener"
                  target="_blank"
                  href={node?.prev?.prev?.attribs?.href}
                >
                  {node?.children?.[0]?.data}
                </a>
              );
            }
          },
        })}
      </div>
    </>
  );
}
